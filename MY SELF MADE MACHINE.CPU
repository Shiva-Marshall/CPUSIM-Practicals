<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="MY SELF MADE MACHINE.CPU" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field6696458">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field57c210cc">
	</Field>
	<Field name="RR" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field3dafaa4a">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register51aafda" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register69b4d27c" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register77ccd9" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register54fc3df5" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register4482ccf" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Register4ba02908" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register758f35a1" />
	<Register name="IEN" width="1" initialValue="0" readOnly="false" id="model.module.Register4029bd70" />
	<Register name="INPR" width="16" initialValue="0" readOnly="false" id="model.module.Register5c2dfee" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register434e4847" />
	<Register name="OUTR" width="16" initialValue="0" readOnly="false" id="model.module.Register4e01bf63" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register5d2f34e2" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register10f35896" />
	<Register name="T" width="1" initialValue="0" readOnly="false" id="model.module.Register21ce36bf" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register62f77f42" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-OUT" bit="0" register="model.module.Register54fc3df5" halt="false" id="model.module.ConditionBit46dbdfda" />
	<ConditionBit name="HALT-BIT" bit="0" register="model.module.Register10f35896" halt="true" id="model.module.ConditionBit4ce6187f" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="4096" cellSize="16" id="model.module.RAM1c4db492" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register51aafda" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet217d397b" />
	<Set name="E&lt;-0" register="model.module.Register54fc3df5" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet50e5f0e2" />
	<Set name="FGI&lt;-0" register="model.module.Register4482ccf" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet5bdeafad" />
	<Set name="FGO&lt;-0" register="model.module.Register4ba02908" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet21ba5de1" />
	<Set name="IEN&lt;-0" register="model.module.Register4029bd70" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet69c41e4c" />
	<Set name="IEN&lt;-1" register="model.module.Register4029bd70" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet16d99176" />

	<!--............. test ..........................-->
	<Test name="if(AC!=0) Skip-1" register="model.module.Register51aafda" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test38d4f7c7" />
	<Test name="if(AC[15]!=0 Skip-1" register="model.module.Register51aafda" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4bf2e069" />
	<Test name="if(AC[15]!=1 Skip-1" register="model.module.Register51aafda" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test28db125" />
	<Test name="if(DR!=0) Skip-1" register="model.module.Register77ccd9" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test5805d223" />
	<Test name="if(E!=0) Skip-1" register="model.module.Register54fc3df5" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test47707c2b" />
	<Test name="if(FGI!=1) Skip-1" register="model.module.Register4482ccf" start="0" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test1bdd2d04" />
	<Test name="if(FGO!=0) Skip-1" register="model.module.Register4ba02908" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test7436b3c3" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register51aafda" delta="1" id="model.microinstruction.Increment2d4f3ac" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register69b4d27c" delta="1" id="model.microinstruction.Increment468156f9" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register77ccd9" delta="1" id="model.microinstruction.Increment34c6e620" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register5d2f34e2" delta="1" id="model.microinstruction.Increment752ff3d0" />

	<!--............. shift .........................-->
	<Shift name="shl AC" type="logical" source="model.module.Register51aafda" destination="model.module.Register51aafda" direction="left" distance="1" id="model.microinstruction.Shift1f4d8764" />
	<Shift name="shr AC" type="logical" source="model.module.Register51aafda" destination="model.module.Register51aafda" direction="right" distance="1" id="model.microinstruction.Shift1576462e" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register51aafda" source2="model.module.Register51aafda" destination="model.module.Register51aafda" id="model.microinstruction.Logical7f03acee" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register51aafda" source2="model.module.Register77ccd9" destination="model.module.Register51aafda" id="model.microinstruction.Logical5863d216" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register54fc3df5" source2="model.module.Register54fc3df5" destination="model.module.Register54fc3df5" id="model.microinstruction.Logical321a6815" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register51aafda" source2="model.module.Register77ccd9" destination="model.module.Register51aafda" id="model.microinstruction.Arithmeticdc699ef" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-T" source="model.module.Register21ce36bf" srcStartBit="0" dest="model.module.Register51aafda" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6fc02065" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register54fc3df5" srcStartBit="0" dest="model.module.Register51aafda" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR2975bce9" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register77ccd9" srcStartBit="0" dest="model.module.Register51aafda" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR48ce2312" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register434e4847" srcStartBit="0" dest="model.module.Register69b4d27c" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR71fed205" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register5d2f34e2" srcStartBit="0" dest="model.module.Register69b4d27c" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1f530757" />
	<TransferRtoR name="AR&lt;-TR(4-15)" source="model.module.Register62f77f42" srcStartBit="4" dest="model.module.Register69b4d27c" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1b4572a0" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register51aafda" srcStartBit="15" dest="model.module.Register54fc3df5" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR222a1469" />
	<TransferRtoR name="E&lt;-T" source="model.module.Register21ce36bf" srcStartBit="0" dest="model.module.Register54fc3df5" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR254394d3" />
	<TransferRtoR name="I&lt;-IR(15)" source="model.module.Register434e4847" srcStartBit="15" dest="model.module.Register758f35a1" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR12cde004" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register69b4d27c" srcStartBit="0" dest="model.module.Register5d2f34e2" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR60b62768" />
	<TransferRtoR name="T&lt;-AC(0)" source="model.module.Register51aafda" srcStartBit="0" dest="model.module.Register21ce36bf" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR59eac2a1" />
	<TransferRtoR name="T&lt;-E" source="model.module.Register54fc3df5" srcStartBit="0" dest="model.module.Register21ce36bf" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR11bb8ec1" />
	<TransferRtoR name="TR&lt;-PC" source="model.module.Register5d2f34e2" srcStartBit="0" dest="model.module.Register62f77f42" destStartBit="4" numBits="12" id="model.microinstruction.TransferRtoR6c8b8132" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR(0-3)" ir="model.module.Register434e4847" id="model.microinstruction.Decode3dd776ac" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT" bit="model.module.ConditionBit4ce6187f" value="1" id="model.microinstruction.SetCondBit32a7447d" />

	<!--............. io ............................-->
	<IO name="AC(0-7)&lt;-INPR" direction="input" type="integer" buffer="model.module.Register51aafda" connection="[Console]" id="model.microinstruction.IO7fa7196e" />
	<IO name="OUTR&lt;-AC(0-7)" direction="output" type="integer" buffer="model.module.Register51aafda" connection="[Console]" id="model.microinstruction.IO4f9585b9" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM1c4db492" data="model.module.Register77ccd9" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccess4971e8f1" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM1c4db492" data="model.module.Register434e4847" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccess417dc90e" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM1c4db492" data="model.module.Register51aafda" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccess656d426" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM1c4db492" data="model.module.Register77ccd9" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccess658d3118" />
	<MemoryAccess name="M[AR]&lt;-TR" direction="write" memory="model.module.RAM1c4db492" data="model.module.Register62f77f42" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccess237d7b38" />
	<MemoryAccess name="TR&lt;-M[AR]" direction="read" memory="model.module.RAM1c4db492" data="model.module.Register62f77f42" address="model.module.Register69b4d27c" id="model.microinstruction.MemoryAccessc67f3e0" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End3ca0e1ae" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR1f530757" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess417dc90e" />
		<Microinstruction microRef="model.microinstruction.Increment752ff3d0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR71fed205" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR12cde004" />
		<Microinstruction microRef="model.microinstruction.Decode3dd776ac" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="RR" assemblyFormat="RR" instructionColors="#82f0b0" assemblyColors="#82f0b0" >
		<Microinstruction microRef="model.microinstruction.IO4f9585b9" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="RR" assemblyFormat="RR" instructionColors="#a384ea" assemblyColors="#a384ea" >
		<Microinstruction microRef="model.microinstruction.IO7fa7196e" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="e" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#cd8fc2 #9fe2a2" assemblyColors="#cd8fc2 #9fe2a2" >
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#b0a5b1 #8ddbc5" assemblyColors="#b0a5b1 #8ddbc5" >
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f8a3d3 #b8e5cc" assemblyColors="#f8a3d3 #b8e5cc" >
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f48bf5 #b5fecd" assemblyColors="#f48bf5 #b5fecd" >
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#e8dec0 #8cf6a0" assemblyColors="#e8dec0 #8cf6a0" >
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#9ee6e3 #9a8c8e" assemblyColors="#9ee6e3 #9a8c8e" >
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#caba94 #b3efdf" assemblyColors="#caba94 #b3efdf" >
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#92dccb #a9a1e6" assemblyColors="#92dccb #a9a1e6" >
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#aebdcf #ef83d1" assemblyColors="#aebdcf #ef83d1" >
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#d3f6f5 #87e58c" assemblyColors="#d3f6f5 #87e58c" >
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#cefdd1 #deb7e8" assemblyColors="#cefdd1 #deb7e8" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess656d426" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a0ed85 #82fce8" assemblyColors="#a0ed85 #82fce8" >
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a29fc3 #e2a4ae" assemblyColors="#a29fc3 #e2a4ae" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess4971e8f1" />
		<Microinstruction microRef="model.microinstruction.Arithmeticdc699ef" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#c0b3bd #e498c6" assemblyColors="#c0b3bd #e498c6" >
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="RR" assemblyFormat="RR" instructionColors="#e8ce96" assemblyColors="#e8ce96" >
		<Microinstruction microRef="model.microinstruction.SetCondBit32a7447d" />
		<Microinstruction microRef="model.microinstruction.End3ca0e1ae" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="RR" assemblyFormat="RR" instructionColors="#e4dabe" assemblyColors="#e4dabe" >
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="RR" assemblyFormat="RR" instructionColors="#eff2d9" assemblyColors="#eff2d9" >
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="RR" assemblyFormat="RR" instructionColors="#dcc3a7" assemblyColors="#dcc3a7" >
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="RR" assemblyFormat="RR" instructionColors="#aeb981" assemblyColors="#aeb981" >
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="RR" assemblyFormat="RR" instructionColors="#9784db" assemblyColors="#9784db" >
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="RR" assemblyFormat="RR" instructionColors="#99f58a" assemblyColors="#99f58a" >
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="RR" assemblyFormat="RR" instructionColors="#fdabec" assemblyColors="#fdabec" >
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="RR" assemblyFormat="RR" instructionColors="#be9692" assemblyColors="#be9692" >
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="RR" assemblyFormat="RR" instructionColors="#a6aaf1" assemblyColors="#a6aaf1" >
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="RR" assemblyFormat="RR" instructionColors="#d0b4a6" assemblyColors="#d0b4a6" >
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="RR" assemblyFormat="RR" instructionColors="#dbac96" assemblyColors="#dbac96" >
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM1c4db492" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
